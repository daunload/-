### Fiber란? 

React 16 부터 채택된 새로운 코어 아키텍쳐. 기존 스택 기반 알고리즘을 완전히 새롭게 작성한 것이다.

### 재조정 (Reconciliation)

virtual DOM은 UI의 가상적인 표현을 메모리에 저장하고 React DOM과 같은 라이브러리에 의해 "실제" DOM과 동기화하는 프로그래밍 개념이다. 이 과정을 `재조정`이라고 한다.

n 개의 엘리먼트가 있는 트리를 다른 트리로 변환하는 알고리즘 복잡도를 아래 두 조건을 전제로 O(n)인 휴리스틱 알고리즘을 사용한다.

- 서로 다른 타입의 두 엘리먼트는 서로 다른 트리를 만들어낸다.
- 개발자가 key prop을 통해, 여러 렌더링 사이에서 어떤 자식 엘리먼트가 변경되지 않아야 할지 표시해 줄 수 있다.

<br/>

> React는 컴포넌트 트리에 대한 추가 정보를 포함하기 위해 "fibers"라는 내부 객체를 사용한다. 또한 React에서 "virtual DOM" 구현의 일부로 간주할 수 있다.

### 동시성 스케쥴링

파이버는 기존의 스택 재조정자와 근본적으로 다른 점은 동시성이다. DOM 업데이트, 렌더링 로직을 작업 단위로 구분하고 이를 비동기로 실행하여 최대 실행 시간이 16ms가 넘지 않도록 제어한다.

파이버는 단순한 작업을 chunk로 분리하여 실행 시간만을 관리하는 것이 아니라 작업의 유형에 따라 우선순위를 부여하고, 기존에 수행중인 작업보다 더 우선순위가 높은 작업이 인입될 경우 기존의 작업을 일시 중단하고 인입된 작업을 처리 후 다시 돌아오는 기능이 있다.

### React의 동작 단계
- Render: JSX 선언 또는 `React.createElement()`를 통해 일반 객체인 React 엘리먼트를 생성한다.
- Reconcile: 이전에 렌더링된 실제 DOM 트리와 새로 렌더링할 React 엘리먼트를 비교하여 변경점을 적용한다.
- Commit: 새로운 DOM 엘리먼트를 브라우저 뷰에 커밋한다.
- Update: props, state 변경 시 해당 컴포넌트와 하위 컴포넌트에 대해 위 과정을 반복한다.

> React에서 '렌더링'은 React 엘리먼트를 생성하는 동작을 의미한다. 또한 DOM 렌더링 동작은 React 내에서 '커밋'이라고 불리는 것을 알 수 있다.

---


### React 컴포넌트는 어떻게 DOM에 렌더링될까?

### 루트 생성
`createRoot()`는 몇 가지 플래그를 설정한 후 `createFiberRoot()`를 호출하여 고유한 `FiberRootNode`를 생성한다.

```ts
// createFiberRoot 함수 내부 코드
  const uninitializedFiber = createHostRootFiber(tag, isStrictMode);
  root.current = uninitializedFiber;
  uninitializedFiber.stateNode = root;

  const initialCache = createCache();
  retainCache(initialCache);

  root.pooledCache = initialCache;
  retainCache(initialCache);
  const initialState: RootState = {
    element: initialChildren,
    isDehydrated: hydrate,
    cache: initialCache,
  };
  uninitializedFiber.memoizedState = initialState;

  initializeUpdateQueue(uninitializedFiber);

  return root;
}
```

### Render 단계
```ts
root.render(<Component />);

// transspiled JS
root.render(React.createElement(Component, null));
```

`ReactRootDOM.render()`는 JSX 등으로 작성된 코드가 실제 DOM으로 커밋되기까지 모든 과정을 의미하는 용어로 렌더링을 사용한다.

> React 내부에서 Render 단계는 더 좁은 의미로, JSX 또는 `React.createElemennt()`로 작성된 코드를 React 엘리먼트로 변경하는 작업만을 의미한다.

React 엘리먼트는 클래스가 아닌 일반 객체로, 사용자가 작성한 컴포넌트 또는 엘리먼트 타입과 어트리뷰트, 자식에 관한 정보를 담고 있는 객체이다.

Render 단계에 `createElement()`가 호출되지만 component 함수 컴포넌트를  렌더링하는 것이 아닌 렌더링할 것임을 **나타내는** React 엘리먼트를 반환한다.

### Reconcile 단계

`root.render(<Component />)를 실행하면 Component React 엘리먼트를 생성 후 Reconcile 단계에 진입한다.

재조정자는 FiberNode를 하나의 작업 단위로 취급한다. 즉, FiberNode는 자체로 렌더링에 필요한 정보를 담고 있는 객체이자 재조정 작업 단위인 것이다.

---

출처: https://d2.naver.com/helloworld/2690975